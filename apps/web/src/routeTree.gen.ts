/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TasksRouteImport } from './routes/tasks'
import { Route as EventsRouteImport } from './routes/events'
import { Route as IndexRouteImport } from './routes/index'

const SystemLazyRouteImport = createFileRoute('/system')()

const SystemLazyRoute = SystemLazyRouteImport.update({
  id: '/system',
  path: '/system',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/system.lazy').then((d) => d.Route))
const TasksRoute = TasksRouteImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsRoute = EventsRouteImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/events': typeof EventsRoute
  '/tasks': typeof TasksRoute
  '/system': typeof SystemLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/events': typeof EventsRoute
  '/tasks': typeof TasksRoute
  '/system': typeof SystemLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/events': typeof EventsRoute
  '/tasks': typeof TasksRoute
  '/system': typeof SystemLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/events' | '/tasks' | '/system'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/events' | '/tasks' | '/system'
  id: '__root__' | '/' | '/events' | '/tasks' | '/system'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EventsRoute: typeof EventsRoute
  TasksRoute: typeof TasksRoute
  SystemLazyRoute: typeof SystemLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/system': {
      id: '/system'
      path: '/system'
      fullPath: '/system'
      preLoaderRoute: typeof SystemLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks': {
      id: '/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EventsRoute: EventsRoute,
  TasksRoute: TasksRoute,
  SystemLazyRoute: SystemLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
